{"version":3,"file":"nat-avatar.nat-badge.nat-breadcrumb.nat-breadcrumb-item.nat-button.nat-checkbox.nat-divider.nat-icon.nat-input.nat-logo.nat-select.nat-spinner.nat-textarea.entry.esm.js","sources":["src/components/nat-avatar/nat-avatar.css?tag=nat-avatar&encapsulation=shadow","src/components/nat-avatar/nat-avatar.tsx","src/components/nat-badge/nat-badge.css?tag=nat-badge&encapsulation=shadow","src/components/nat-badge/nat-badge.tsx","src/components/nat-breadcrumb/nat-breadcrumb.css?tag=nat-breadcrumb&encapsulation=shadow","src/components/nat-breadcrumb/nat-breadcrumb.tsx","src/components/nat-breadcrumb-item/nat-breadcrumb-item.css?tag=nat-breadcrumb-item&encapsulation=shadow","src/components/nat-breadcrumb-item/nat-breadcrumb-item.tsx","src/components/nat-button/nat-button.css?tag=nat-button&encapsulation=shadow","src/components/nat-button/nat-button.tsx","src/components/nat-checkbox/nat-checkbox.css?tag=nat-checkbox&encapsulation=shadow","src/components/nat-checkbox/nat-checkbox.tsx","src/components/nat-divider/nat-divider.css?tag=nat-divider&encapsulation=shadow","src/components/nat-divider/nat-divider.tsx","src/components/nat-icon/nat-icon.css?tag=nat-icon&encapsulation=shadow","src/components/nat-icon/nat-icon.tsx","src/components/nat-input/nat-input.css?tag=nat-input&encapsulation=shadow","src/components/nat-input/nat-input.tsx","src/components/nat-logo/nat-logo.css?tag=nat-logo&encapsulation=shadow","src/components/nat-logo/nat-logo.tsx","src/components/nat-select/nat-select.css?tag=nat-select&encapsulation=shadow","src/components/nat-select/nat-select.tsx","src/components/nat-spinner/nat-spinner.css?tag=nat-spinner&encapsulation=shadow","src/components/nat-spinner/nat-spinner.tsx","src/components/nat-textarea/nat-textarea.css?tag=nat-textarea&encapsulation=shadow","src/components/nat-textarea/nat-textarea.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n\n.avatar {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--nat-radius-full);\n  overflow: hidden;\n  background: var(--nat-primary);\n  color: var(--nat-text-inverse);\n  font-weight: var(--nat-font-semibold);\n  font-family: var(--nat-font-sans);\n}\n\n.avatar--sm {\n  width: var(--nat-size-sm);\n  height: var(--nat-size-sm);\n  font-size: var(--nat-text-xs);\n}\n\n.avatar--md {\n  width: var(--nat-size-md);\n  height: var(--nat-size-md);\n  font-size: var(--nat-text-sm);\n}\n\n.avatar--lg {\n  width: var(--nat-size-xl);\n  height: var(--nat-size-xl);\n  font-size: var(--nat-text-lg);\n}\n\n.avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.avatar__initials {\n  user-select: none;\n}\n","import { Component, Prop, State, Host, h } from '@stencil/core';\n\nexport type AvatarSize = 'sm' | 'md' | 'lg';\n\n@Component({\n  tag: 'nat-avatar',\n  styleUrl: 'nat-avatar.css',\n  shadow: true,\n})\nexport class NatAvatar {\n  /**\n   * Image source URL\n   */\n  @Prop() src?: string;\n\n  /**\n   * Alternative text for the image\n   */\n  @Prop() alt: string = '';\n\n  /**\n   * Name used to generate initials when image is not available\n   */\n  @Prop() name?: string;\n\n  /**\n   * Size of the avatar\n   */\n  @Prop() size: AvatarSize = 'md';\n\n  @State() imageError: boolean = false;\n\n  private getInitials(): string {\n    if (!this.name) return '?';\n    return this.name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`avatar avatar--${this.size}`}>\n          {this.src && !this.imageError ? (\n            <img src={this.src} alt={this.alt} onError={() => (this.imageError = true)} />\n          ) : (\n            <span class=\"avatar__initials\">{this.getInitials()}</span>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-flex;\n}\n\n.badge {\n  align-items: center;\n  border-radius: var(--nat-radius-full);\n  display: inline-flex;\n  font-weight: var(--nat-font-semibold);\n  justify-content: center;\n  line-height: var(--nat-leading-none);\n  font-family: var(--nat-font-sans);\n  transition: var(--nat-transition-fast);\n}\n\n.badge--sm {\n  font-size: var(--nat-text-xs);\n  padding: var(--nat-space-0-5) var(--nat-space-1-5);\n  min-width: 18px;\n  height: 18px;\n}\n\n.badge--md {\n  font-size: var(--nat-text-sm);\n  padding: var(--nat-space-1) var(--nat-space-2);\n  min-width: 22px;\n  height: 22px;\n}\n\n.badge--lg {\n  font-size: var(--nat-text-base);\n  padding: var(--nat-space-1-5) var(--nat-space-3);\n  min-width: 26px;\n  height: 26px;\n}\n\n.badge--primary {\n  background: var(--nat-primary);\n  color: var(--nat-text-inverse);\n}\n\n.badge--success {\n  background: var(--nat-success);\n  color: var(--nat-text-inverse);\n}\n\n.badge--danger {\n  background: var(--nat-error);\n  color: var(--nat-text-inverse);\n}\n\n.badge--warning {\n  background: var(--nat-warning);\n  color: var(--nat-text-inverse);\n}\n\n.badge--info {\n  background: var(--nat-info);\n  color: var(--nat-text-inverse);\n}\n\n.badge__dot {\n  width: 8px;\n  height: 8px;\n  border-radius: var(--nat-radius-full);\n  background: currentColor;\n}\n","import { Component, Prop, Host, h } from '@stencil/core';\n\nexport type BadgeVariant = 'primary' | 'success' | 'danger' | 'warning' | 'info';\nexport type BadgeSize = 'sm' | 'md' | 'lg';\n\n/**\n * @slot - Badge content (text or number)\n */\n@Component({\n  tag: 'nat-badge',\n  styleUrl: 'nat-badge.css',\n  shadow: true,\n})\nexport class NatBadge {\n  /**\n   * Visual style variant of the badge\n   */\n  @Prop() variant: BadgeVariant = 'primary';\n\n  /**\n   * Size of the badge\n   */\n  @Prop() size: BadgeSize = 'md';\n\n  /**\n   * Display as a dot indicator instead of text/number\n   */\n  @Prop() dot: boolean = false;\n\n  /**\n   * Numeric count to display in badge\n   */\n  @Prop() count?: number;\n\n  render() {\n    return (\n      <Host>\n        <span class={`badge badge--${this.variant} badge--${this.size}`}>{this.dot ? <span class=\"badge__dot\"></span> : <slot>{this.count}</slot>}</span>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.breadcrumb {\n  font-family: var(--nat-font-sans);\n}\n","import { Component, Host, h } from '@stencil/core';\n\n/**\n * @slot - Breadcrumb items (nat-breadcrumb-item components)\n */\n@Component({\n  tag: 'nat-breadcrumb',\n  styleUrl: 'nat-breadcrumb.css',\n  shadow: true,\n})\nexport class NatBreadcrumb {\n  render() {\n    return (\n      <Host>\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumb\">\n          <slot />\n        </nav>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--nat-space-2);\n}\n\n.breadcrumb-item {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--nat-space-2);\n  font-size: var(--nat-text-sm);\n  font-family: var(--nat-font-sans);\n}\n\n.breadcrumb-item__link {\n  color: var(--nat-primary);\n  text-decoration: none;\n  transition: color var(--nat-transition-fast);\n}\n\n.breadcrumb-item__link:hover {\n  color: var(--nat-primary-hover);\n  text-decoration: underline;\n}\n\n.breadcrumb-item__text {\n  color: var(--nat-text-primary);\n}\n\n.breadcrumb-item__text[aria-current='page'] {\n  font-weight: var(--nat-font-medium);\n  color: var(--nat-text-secondary);\n}\n\n.breadcrumb-item__separator {\n  color: var(--nat-text-tertiary);\n  user-select: none;\n}\n","import { Component, Prop, Host, h } from '@stencil/core';\n\n/**\n * @slot - Text content of the breadcrumb item\n */\n@Component({\n  tag: 'nat-breadcrumb-item',\n  styleUrl: 'nat-breadcrumb-item.css',\n  shadow: true,\n})\nexport class NatBreadcrumbItem {\n  /**\n   * URL for the breadcrumb link\n   */\n  @Prop() href?: string;\n\n  /**\n   * Whether this is the active/current page\n   */\n  @Prop() active: boolean = false;\n\n  render() {\n    return (\n      <Host role=\"listitem\">\n        <span class=\"breadcrumb-item\">\n          {this.href && !this.active ? (\n            <a href={this.href} class=\"breadcrumb-item__link\">\n              <slot />\n            </a>\n          ) : (\n            <span class=\"breadcrumb-item__text\" aria-current={this.active ? 'page' : undefined}>\n              <slot />\n            </span>\n          )}\n          {!this.active && (\n            <span class=\"breadcrumb-item__separator\" aria-hidden=\"true\">\n              /\n            </span>\n          )}\n        </span>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n}\n\n:host([full-width]) {\n  display: block;\n}\n\n/* ============================================\n * BASE BUTTON\n * ============================================ */\n.nat-button {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--nat-space-2);\n\n  font-family: var(--nat-font-sans);\n  font-weight: var(--nat-font-semibold);\n  text-align: center;\n  white-space: nowrap;\n\n  border: var(--nat-border-width-base) solid transparent;\n  border-radius: var(--nat-radius-lg);\n  cursor: pointer;\n\n  /* Remove all for smoother transitions */\n  transition: background-color var(--nat-transition-base), border-color var(--nat-transition-base), box-shadow var(--nat-transition-base), color var(--nat-transition-base);\n\n  user-select: none;\n  -webkit-user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.nat-button:focus-visible {\n  outline: 2px solid var(--nat-focus-ring);\n  outline-offset: 2px;\n}\n\n/* ============================================\n * SIZES\n * ============================================ */\n.nat-button--sm {\n  height: var(--nat-size-sm);\n  padding: 0 var(--nat-space-3);\n  font-size: var(--nat-text-sm);\n}\n\n.nat-button--md {\n  height: var(--nat-size-md);\n  padding: 0 var(--nat-space-5);\n  font-size: var(--nat-text-base);\n}\n\n.nat-button--lg {\n  height: var(--nat-size-lg);\n  padding: 0 var(--nat-space-6);\n  font-size: var(--nat-text-lg);\n}\n\n/* ============================================\n * VARIANTS\n * ============================================ */\n\n/* Primary */\n.nat-button--primary {\n  background: var(--nat-primary);\n  color: var(--nat-white);\n  box-shadow: var(--nat-shadow-sm);\n}\n\n.nat-button--primary:hover:not(:disabled) {\n  background: var(--nat-primary-hover);\n  box-shadow: var(--nat-shadow-md);\n}\n\n.nat-button--primary:active:not(:disabled) {\n  background: var(--nat-primary-active);\n  box-shadow: var(--nat-shadow-sm);\n}\n\n/* Secondary */\n.nat-button--secondary {\n  background: var(--nat-bg-surface);\n  color: var(--nat-text-primary);\n  border-color: var(--nat-border-base);\n}\n\n.nat-button--secondary:hover:not(:disabled) {\n  background: var(--nat-bg-subtle);\n  border-color: var(--nat-border-hover);\n}\n\n.nat-button--secondary:active:not(:disabled) {\n  background: var(--nat-bg-elevated);\n}\n\n/* Ghost */\n.nat-button--ghost {\n  background: transparent;\n  color: var(--nat-primary);\n}\n\n.nat-button--ghost:hover:not(:disabled) {\n  background: var(--nat-primary-lighter);\n}\n\n.nat-button--ghost:active:not(:disabled) {\n  background: rgba(91, 111, 232, 0.15);\n}\n\n/* Danger */\n.nat-button--danger {\n  background: var(--nat-error);\n  color: var(--nat-white);\n  box-shadow: var(--nat-shadow-sm);\n}\n\n.nat-button--danger:hover:not(:disabled) {\n  background: var(--nat-error-hover);\n  box-shadow: var(--nat-shadow-md);\n}\n\n.nat-button--danger:active:not(:disabled) {\n  background: #dc2626;\n  box-shadow: var(--nat-shadow-sm);\n}\n\n/* Success */\n.nat-button--success {\n  background: var(--nat-success);\n  color: var(--nat-white);\n  box-shadow: var(--nat-shadow-sm);\n}\n\n.nat-button--success:hover:not(:disabled) {\n  background: var(--nat-success-hover);\n  box-shadow: var(--nat-shadow-md);\n}\n\n.nat-button--success:active:not(:disabled) {\n  background: #059669;\n  box-shadow: var(--nat-shadow-sm);\n}\n\n/* Warning */\n.nat-button--warning {\n  background: var(--nat-warning);\n  color: var(--nat-white);\n  box-shadow: var(--nat-shadow-sm);\n}\n\n.nat-button--warning:hover:not(:disabled) {\n  background: var(--nat-warning-hover);\n  box-shadow: var(--nat-shadow-md);\n}\n\n.nat-button--warning:active:not(:disabled) {\n  background: #d97706;\n  box-shadow: var(--nat-shadow-sm);\n}\n\n/* ============================================\n * STATES\n * ============================================ */\n.nat-button--disabled {\n  opacity: var(--nat-opacity-50);\n  cursor: not-allowed;\n}\n\n.nat-button--loading {\n  cursor: wait;\n}\n\n.nat-button--loading .nat-button__content {\n  visibility: hidden;\n}\n\n.nat-button--full-width {\n  width: 100%;\n}\n\n/* ============================================\n * SPINNER (CSS Border Version - No Transform Conflict)\n * ============================================ */\n.nat-button__spinner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 16px;\n  height: 16px;\n  margin-left: -8px;\n  margin-top: -8px;\n  border: 2px solid currentColor;\n  border-right-color: transparent;\n  border-radius: 50%;\n  animation: nat-button-spin 0.6s linear infinite;\n}\n\n/* Size-specific spinners */\n.nat-button--sm .nat-button__spinner {\n  width: 14px;\n  height: 14px;\n  margin-left: -7px;\n  margin-top: -7px;\n  border-width: 1.5px;\n}\n\n.nat-button--lg .nat-button__spinner {\n  width: 18px;\n  height: 18px;\n  margin-left: -9px;\n  margin-top: -9px;\n  border-width: 2.5px;\n}\n\n@keyframes nat-button-spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n/**\n * Visual style variants for the button\n */\nexport type ButtonVariant = 'primary' | 'secondary' | 'ghost' | 'danger' | 'success' | 'warning';\n\n/**\n * Size variants for the button\n */\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\n/**\n * @slot - Button content (text, icons, etc.)\n */\n@Component({\n  tag: 'nat-button',\n  styleUrl: 'nat-button.css',\n  shadow: true,\n})\nexport class NatButton {\n  /**\n   * The visual style variant of the button\n   * @default 'primary'\n   */\n  @Prop() variant: ButtonVariant = 'primary';\n\n  /**\n   * The size of the button\n   * @default 'md'\n   */\n  @Prop() size: ButtonSize = 'md';\n\n  /**\n   * If true, the button is disabled and cannot be interacted with\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, displays a loading spinner and disables interaction\n   * @default false\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * If true, the button will take up the full width of its container\n   * @default false\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   * The HTML button type attribute\n   * @default 'button'\n   */\n  @Prop() type: 'button' | 'submit' | 'reset' = 'button';\n\n  /**\n   * Aria label for the button (accessibility)\n   */\n  @Prop() ariaLabel?: string;\n\n  /**\n   * Emitted when the button is clicked (not fired when disabled or loading)\n   */\n  @Event() natClick: EventEmitter<MouseEvent>;\n\n  private handleClick = (event: MouseEvent) => {\n    if (this.disabled || this.loading) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    this.natClick.emit(event);\n  };\n\n  render() {\n    const classes = {\n      'nat-button': true,\n      [`nat-button--${this.variant}`]: true,\n      [`nat-button--${this.size}`]: true,\n      'nat-button--disabled': this.disabled,\n      'nat-button--loading': this.loading,\n      'nat-button--full-width': this.fullWidth,\n    };\n\n    return (\n      <Host>\n        <button\n          type={this.type}\n          class={classes}\n          disabled={this.disabled || this.loading}\n          onClick={this.handleClick}\n          aria-label={this.ariaLabel}\n          aria-busy={this.loading ? 'true' : 'false'}\n          aria-disabled={this.disabled ? 'true' : 'false'}\n        >\n          {this.loading && (\n            <span class=\"nat-button__spinner\" aria-hidden=\"true\">\n              {/* CSS border spinner - simpler & no transform conflict */}\n            </span>\n          )}\n          <span class=\"nat-button__content\">\n            <slot />\n          </span>\n        </button>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n}\n\n/* ============================================\n * CONTAINER\n * ============================================ */\n.nat-checkbox-container {\n  align-items: center;\n  cursor: pointer;\n  display: inline-flex;\n  gap: var(--nat-space-2);\n  position: relative;\n  user-select: none;\n}\n\n.nat-checkbox-container--disabled {\n  cursor: not-allowed;\n  opacity: var(--nat-opacity-50);\n}\n\n/* ============================================\n * WRAPPER\n * ============================================ */\n.nat-checkbox-wrapper {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: relative;\n}\n\n/* ============================================\n * HIDDEN INPUT\n * ============================================ */\n.nat-checkbox-input {\n  height: 0;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 0;\n}\n\n/* ============================================\n * CHECKBOX BOX\n * ============================================ */\n.nat-checkbox {\n  align-items: center;\n  background: var(--nat-bg-elevated);\n  border: 2px solid var(--nat-border-base);\n  border-radius: var(--nat-radius-sm);\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  overflow: hidden;\n  position: relative;\n  transition: background-color var(--nat-transition-base), border-color var(--nat-transition-base), transform var(--nat-transition-fast);\n}\n\n/* Size variants */\n.nat-checkbox-container--sm .nat-checkbox {\n  height: 16px;\n  width: 16px;\n}\n\n.nat-checkbox-container--md .nat-checkbox {\n  height: 20px;\n  width: 20px;\n}\n\n.nat-checkbox-container--lg .nat-checkbox {\n  height: 24px;\n  width: 24px;\n}\n\n/* Hover state */\n.nat-checkbox-container:not(.nat-checkbox-container--disabled):hover .nat-checkbox {\n  border-color: var(--nat-border-hover);\n}\n\n/* Focus state */\n.nat-checkbox-container--focused .nat-checkbox {\n  outline: 2px solid var(--nat-focus-ring);\n  outline-offset: 2px;\n}\n\n/* Checked state */\n.nat-checkbox--checked {\n  background: var(--nat-primary);\n  border-color: var(--nat-primary);\n}\n\n.nat-checkbox--checked:hover {\n  background: var(--nat-primary-hover);\n  border-color: var(--nat-primary-hover);\n}\n\n/* Indeterminate state */\n.nat-checkbox--indeterminate {\n  background: var(--nat-primary);\n  border-color: var(--nat-primary);\n}\n\n/* Disabled state */\n.nat-checkbox--disabled {\n  background: var(--nat-bg-subtle);\n  border-color: var(--nat-border-base);\n}\n\n/* ============================================\n * CHECKBOX ICON\n * ============================================ */\n.nat-checkbox-icon {\n  color: var(--nat-white);\n  left: 50%;\n  opacity: 0;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%) scale(1);\n  transition: transform var(--nat-transition-fast) ease-out, opacity var(--nat-transition-fast) ease-out;\n}\n\n.nat-checkbox-icon--visible {\n  animation: nat-checkbox-check 0.2s ease-out forwards;\n}\n\n.nat-checkbox-container--sm .nat-checkbox-icon {\n  height: 12px;\n  width: 12px;\n}\n\n.nat-checkbox-container--md .nat-checkbox-icon {\n  height: 14px;\n  width: 14px;\n}\n\n.nat-checkbox-container--lg .nat-checkbox-icon {\n  height: 16px;\n  width: 16px;\n}\n\n@keyframes nat-checkbox-check {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0);\n  }\n  50% {\n    transform: translate(-50%, -50%) scale(1.2);\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n  }\n}\n\n/* ============================================\n * LABEL\n * ============================================ */\n.nat-checkbox-label {\n  color: var(--nat-text-primary);\n  font-size: var(--nat-text-base);\n  line-height: var(--nat-leading-normal);\n}\n\n.nat-checkbox-container--sm .nat-checkbox-label {\n  font-size: var(--nat-text-sm);\n}\n\n.nat-checkbox-container--lg .nat-checkbox-label {\n  font-size: var(--nat-text-lg);\n}\n\n.nat-checkbox-container--disabled .nat-checkbox-label {\n  color: var(--nat-text-disabled);\n}\n\n/* ============================================\n * ACCESSIBILITY\n * ============================================ */\n.nat-checkbox-input:focus-visible + .nat-checkbox {\n  outline: 2px solid var(--nat-focus-ring);\n  outline-offset: 2px;\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch, Element } from '@stencil/core';\n\n/**\n * Size variants for the checkbox\n */\nexport type CheckboxSize = 'sm' | 'md' | 'lg';\n\n/**\n * @slot - Label content (alternative to label prop)\n */\n@Component({\n  tag: 'nat-checkbox',\n  styleUrl: 'nat-checkbox.css',\n  shadow: true,\n})\nexport class NatCheckbox {\n  @Element() private el!: HTMLElement;\n\n  private inputElement?: HTMLInputElement;\n  private checkboxId = `nat-checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n  /**\n   * If true, the checkbox is checked\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) checked: boolean = false;\n\n  /**\n   * If true, the checkbox is in indeterminate state (mixed/partial selection)\n   * @default false\n   */\n  @Prop({ mutable: true }) indeterminate: boolean = false;\n\n  /**\n   * Label text for the checkbox\n   * @default ''\n   */\n  @Prop() label: string = '';\n\n  /**\n   * If true, the checkbox is disabled\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, the checkbox is required\n   * @default false\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * Size variant of the checkbox\n   * @default 'md'\n   */\n  @Prop() size: CheckboxSize = 'md';\n\n  /**\n   * Name attribute for form submission\n   * @default ''\n   */\n  @Prop() name: string = '';\n\n  /**\n   * Value attribute for form submission\n   * @default 'on'\n   */\n  @Prop() value: string = 'on';\n\n  /**\n   * Aria label for accessibility\n   */\n  @Prop() ariaLabel?: string;\n\n  /**\n   * Internal focus state\n   */\n  @State() isFocused: boolean = false;\n\n  /**\n   * Emitted when the checked state changes\n   */\n  @Event() natChange: EventEmitter<boolean>;\n\n  /**\n   * Emitted when the checkbox receives focus\n   */\n  @Event() natFocus: EventEmitter<void>;\n\n  /**\n   * Emitted when the checkbox loses focus\n   */\n  @Event() natBlur: EventEmitter<void>;\n\n  @Watch('checked')\n  checkedChanged(newValue: boolean) {\n    if (this.inputElement) {\n      this.inputElement.checked = newValue;\n    }\n    // Clear indeterminate when explicitly checked/unchecked\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n  }\n\n  @Watch('indeterminate')\n  indeterminateChanged(newValue: boolean) {\n    if (this.inputElement) {\n      this.inputElement.indeterminate = newValue;\n    }\n  }\n\n  componentDidLoad() {\n    if (this.inputElement) {\n      this.inputElement.indeterminate = this.indeterminate;\n    }\n  }\n\n  private handleChange = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.indeterminate = false;\n    this.natChange.emit(this.checked);\n  };\n\n  private handleFocus = () => {\n    this.isFocused = true;\n    this.natFocus.emit();\n  };\n\n  private handleBlur = () => {\n    this.isFocused = false;\n    this.natBlur.emit();\n  };\n\n  render() {\n    const containerClasses = {\n      'nat-checkbox-container': true,\n      [`nat-checkbox-container--${this.size}`]: true,\n      'nat-checkbox-container--disabled': this.disabled,\n      'nat-checkbox-container--focused': this.isFocused,\n    };\n\n    const checkboxClasses = {\n      'nat-checkbox': true,\n      'nat-checkbox--checked': this.checked,\n      'nat-checkbox--indeterminate': this.indeterminate,\n      'nat-checkbox--disabled': this.disabled,\n    };\n\n    return (\n      <Host>\n        <label class={containerClasses}>\n          <div class=\"nat-checkbox-wrapper\">\n            <input\n              ref={el => (this.inputElement = el)}\n              type=\"checkbox\"\n              class=\"nat-checkbox-input\"\n              id={this.checkboxId}\n              checked={this.checked}\n              disabled={this.disabled}\n              required={this.required}\n              name={this.name}\n              value={this.value}\n              aria-label={this.ariaLabel || this.label || undefined}\n              aria-checked={this.indeterminate ? 'mixed' : this.checked ? 'true' : 'false'}\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n            />\n            <div class={checkboxClasses}>\n              <nat-icon\n                class={{\n                  'nat-checkbox-icon': true,\n                  'nat-checkbox-icon--checkmark': true,\n                  'nat-checkbox-icon--visible': this.checked && !this.indeterminate,\n                }}\n                name=\"check\"\n                library=\"default\"\n                decorative\n              />\n\n              <nat-icon\n                class={{\n                  'nat-checkbox-icon': true,\n                  'nat-checkbox-icon--indeterminate': true,\n                  'nat-checkbox-icon--visible': this.indeterminate,\n                }}\n                name=\"minus\"\n                library=\"default\"\n                decorative\n              />\n            </div>\n          </div>\n\n          {(this.label || this.hasSlotContent()) && <div class=\"nat-checkbox-label\">{this.label || <slot />}</div>}\n        </label>\n      </Host>\n    );\n  }\n\n  private hasSlotContent(): boolean {\n    return !!this.el.childNodes.length;\n  }\n}\n",":host {\n  display: block;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  color: var(--nat-text-secondary);\n  font-size: var(--nat-text-sm);\n  font-family: var(--nat-font-sans);\n}\n\n.divider--horizontal {\n  width: 100%;\n  margin: var(--nat-space-4) 0;\n}\n\n.divider--horizontal::before,\n.divider--horizontal::after {\n  content: '';\n  flex: 1;\n  border-top: var(--nat-border-width-base) solid var(--nat-border-base);\n}\n\n.divider--horizontal::before {\n  margin-right: var(--nat-space-3);\n}\n\n.divider--horizontal::after {\n  margin-left: var(--nat-space-3);\n}\n\n.divider--vertical {\n  height: 100%;\n  flex-direction: column;\n  margin: 0 var(--nat-space-4);\n}\n\n.divider--vertical::before,\n.divider--vertical::after {\n  content: '';\n  flex: 1;\n  border-left: var(--nat-border-width-base) solid var(--nat-border-base);\n}\n\n.divider--vertical::before {\n  margin-bottom: var(--nat-space-3);\n}\n\n.divider--vertical::after {\n  margin-top: var(--nat-space-3);\n}\n","import { Component, Prop, Host, h } from '@stencil/core';\n\n/**\n * @slot - Optional text content displayed in the divider\n */\n@Component({\n  tag: 'nat-divider',\n  styleUrl: 'nat-divider.css',\n  shadow: true,\n})\nexport class NatDivider {\n  /**\n   * Orientation of the divider line\n   */\n  @Prop() orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  render() {\n    return (\n      <Host>\n        <div class={`divider divider--${this.orientation}`}>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  contain: strict;\n  box-sizing: content-box !important;\n}\n\n/* ============================================\n * ICON CONTAINER\n * ============================================ */\n.nat-icon {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* ============================================\n * SVG STYLING\n * ============================================ */\n.nat-icon ::slotted(svg),\n.nat-icon > svg {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n/* ============================================\n * LOADING STATE\n * ============================================ */\n.nat-icon--loading {\n  opacity: 0;\n}\n\n/* ============================================\n * ERROR STATE (SHOW SLOT)\n * ============================================ */\n.nat-icon--error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--nat-text-tertiary);\n}\n","import { Component, Host, h, Prop, State, Watch, Element } from '@stencil/core';\nimport { getIconLibrary } from '../../utils/icon-registry';\n\n/**\n * Icon component with registry system support.\n * Supports loading icons from registered libraries or direct SVG URLs.\n *\n * @slot - Fallback content when icon fails to load\n */\n@Component({\n  tag: 'nat-icon',\n  styleUrl: 'nat-icon.css',\n  shadow: true,\n})\nexport class NatIcon {\n  @Element() el!: HTMLElement;\n\n  private io?: IntersectionObserver;\n\n  /**\n   * Name of the icon from the registered library\n   * @example \"check\", \"x\", \"chevron-down\"\n   */\n  @Prop() name?: string;\n\n  /**\n   * Icon library to use (must be registered first)\n   * @default 'default'\n   */\n  @Prop() library: string = 'default';\n\n  /**\n   * Direct SVG source URL (bypasses icon library)\n   * Takes precedence over name + library\n   */\n  @Prop() src?: string;\n\n  /**\n   * Accessible label for screen readers\n   * Required for icons without accompanying text\n   */\n  @Prop() label?: string;\n\n  /**\n   * If true, icon is decorative and hidden from screen readers\n   * @default false\n   */\n  @Prop() decorative: boolean = false;\n\n  /**\n   * Internal state for loaded SVG content\n   */\n  @State() svg: string = '';\n\n  /**\n   * Internal loading state\n   */\n  @State() isLoading: boolean = false;\n\n  /**\n   * Internal error state\n   */\n  @State() hasError: boolean = false;\n\n  @Watch('name')\n  @Watch('library')\n  @Watch('src')\n  handleChange() {\n    this.loadIcon();\n  }\n\n  componentDidLoad() {\n    this.setupIntersectionObserver();\n  }\n\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n    }\n  }\n\n  private setupIntersectionObserver() {\n    // Lazy load icons when they enter viewport\n    this.io = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            this.loadIcon();\n            this.io?.disconnect(); // Load once\n          }\n        });\n      },\n      { rootMargin: '50px' }, // Pre-load 50px before visible\n    );\n\n    this.io.observe(this.el);\n  }\n\n  private async loadIcon() {\n    // Reset states\n    this.isLoading = true;\n    this.hasError = false;\n    this.svg = '';\n\n    try {\n      let url: string | undefined;\n\n      if (this.src) {\n        // Direct src takes precedence\n        url = this.src;\n      } else if (this.name) {\n        // Get URL from registered library\n        const library = getIconLibrary(this.library);\n\n        if (!library) {\n          throw new Error(`Icon library \"${this.library}\" is not registered`);\n        }\n\n        if (typeof library.resolver === 'function') {\n          url = library.resolver(this.name);\n        }\n      }\n\n      if (!url) {\n        throw new Error('No icon URL resolved');\n      }\n\n      // Fetch SVG\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch icon: ${response.statusText}`);\n      }\n\n      let svgContent = await response.text();\n\n      // Apply mutator if library has one\n      if (!this.src && this.name) {\n        const library = getIconLibrary(this.library);\n\n        if (library?.mutator) {\n          svgContent = library.mutator(svgContent);\n        }\n      }\n\n      this.svg = svgContent;\n      this.isLoading = false;\n    } catch (error) {\n      console.error('Icon load error:', error);\n      this.hasError = true;\n      this.isLoading = false;\n    }\n  }\n\n  render() {\n    const hasLabel = !!this.label;\n    const isDecorative = this.decorative || !hasLabel;\n\n    return (\n      <Host role={isDecorative ? 'presentation' : 'img'} aria-label={!isDecorative ? this.label : undefined} aria-hidden={isDecorative ? 'true' : undefined}>\n        <div\n          class={{\n            'nat-icon': true,\n            'nat-icon--loading': this.isLoading,\n            'nat-icon--error': this.hasError,\n          }}\n          innerHTML={this.svg}\n        />\n\n        {this.hasError && <slot />}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n/* ============================================\n * CONTAINER\n * ============================================ */\n.nat-input-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--nat-space-2);\n}\n\n.nat-input-container--full-width {\n  width: 100%;\n}\n\n/* ============================================\n * LABEL\n * ============================================ */\n.nat-input-label {\n  font-size: var(--nat-text-sm);\n  font-weight: var(--nat-font-medium);\n  color: var(--nat-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--nat-space-1);\n}\n\n.nat-input-required {\n  color: var(--nat-error);\n  font-size: var(--nat-text-base);\n}\n\n/* ============================================\n * WRAPPER\n * ============================================ */\n.nat-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: var(--nat-space-2);\n  background: var(--nat-bg-elevated);\n  border: var(--nat-border-width-base) solid var(--nat-border-base);\n  border-radius: var(--nat-radius-lg);\n  transition: border-color var(--nat-transition-base), box-shadow var(--nat-transition-base), background-color var(--nat-transition-base);\n}\n\n.nat-input-wrapper:hover:not(.nat-input-wrapper--disabled) {\n  border-color: var(--nat-border-hover);\n}\n\n.nat-input-wrapper--focused {\n  border-color: var(--nat-focus-ring);\n  box-shadow: 0 0 0 3px rgba(91, 111, 232, 0.1);\n}\n\n.nat-input-wrapper--error {\n  border-color: var(--nat-error);\n}\n\n.nat-input-wrapper--error.nat-input-wrapper--focused {\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n}\n\n.nat-input-wrapper--disabled {\n  opacity: var(--nat-opacity-50);\n  cursor: not-allowed;\n  background: var(--nat-bg-subtle);\n}\n\n/* ============================================\n * SIZES\n * ============================================ */\n.nat-input-wrapper--sm {\n  height: var(--nat-size-sm);\n  padding: 0 var(--nat-space-2);\n}\n\n.nat-input-wrapper--md {\n  height: var(--nat-size-md);\n  padding: 0 var(--nat-space-3);\n}\n\n.nat-input-wrapper--lg {\n  height: var(--nat-size-lg);\n  padding: 0 var(--nat-space-4);\n}\n\n/* ============================================\n * VARIANTS\n * ============================================ */\n.nat-input-wrapper--filled {\n  background: var(--nat-bg-surface);\n  border-color: transparent;\n}\n\n.nat-input-wrapper--filled:hover:not(.nat-input-wrapper--disabled) {\n  background: var(--nat-bg-subtle);\n}\n\n.nat-input-wrapper--filled.nat-input-wrapper--focused {\n  border-color: var(--nat-focus-ring);\n}\n\n.nat-input-wrapper--flushed {\n  background: transparent;\n  border: none;\n  border-bottom: var(--nat-border-width-base) solid var(--nat-border-base);\n  border-radius: 0;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.nat-input-wrapper--flushed.nat-input-wrapper--focused {\n  border-bottom-color: var(--nat-focus-ring);\n  box-shadow: none;\n}\n\n/* ============================================\n * INPUT ELEMENT\n * ============================================ */\n.nat-input {\n  flex: 1;\n  min-width: 0;\n  background: transparent;\n  border: none;\n  outline: none;\n  font-family: var(--nat-font-sans);\n  font-size: var(--nat-text-base);\n  color: var(--nat-text-primary);\n  padding: 0;\n}\n\n.nat-input::placeholder {\n  color: var(--nat-text-placeholder);\n}\n\n.nat-input:disabled {\n  cursor: not-allowed;\n}\n\n/* Size-specific font sizes */\n.nat-input-wrapper--sm .nat-input {\n  font-size: var(--nat-text-sm);\n}\n\n.nat-input-wrapper--lg .nat-input {\n  font-size: var(--nat-text-lg);\n}\n\n/* Remove number input spinners */\n.nat-input[type='number']::-webkit-inner-spin-button,\n.nat-input[type='number']::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.nat-input[type='number'] {\n  -moz-appearance: textfield;\n}\n\n/* ============================================\n * PREFIX & SUFFIX (SLOTS)\n * ============================================ */\n::slotted([slot='prefix-icon']),\n::slotted([slot='suffix-icon']) {\n  display: flex;\n  align-items: center;\n  color: var(--nat-text-secondary);\n  flex-shrink: 0;\n  font-size: 1.25rem;\n}\n\n/* ============================================\n * CLEAR BUTTON\n * ============================================ */\n.nat-input-clear {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  border: none;\n  background: transparent;\n  color: var(--nat-text-tertiary);\n  cursor: pointer;\n  border-radius: var(--nat-radius-sm);\n  transition: color var(--nat-transition-fast), background-color var(--nat-transition-fast);\n  flex-shrink: 0;\n}\n\n.nat-input-clear:hover {\n  color: var(--nat-text-primary);\n  background: var(--nat-bg-subtle);\n}\n\n.nat-input-clear:focus-visible {\n  outline: 2px solid var(--nat-focus-ring);\n  outline-offset: 2px;\n}\n\n.nat-input-clear svg {\n  width: 16px;\n  height: 16px;\n}\n\n/* ============================================\n * MESSAGE\n * ============================================ */\n.nat-input-message {\n  font-size: var(--nat-text-xs);\n  color: var(--nat-text-secondary);\n  padding-left: var(--nat-space-1);\n  min-height: 1.25rem;\n}\n\n.nat-input-message--error {\n  color: var(--nat-error);\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch, Method } from '@stencil/core';\n\n/**\n * HTML input types supported by the component\n */\nexport type InputType = 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' | 'search';\n\n/**\n * Size variants for the input\n */\nexport type InputSize = 'sm' | 'md' | 'lg';\n\n/**\n * Visual style variants for the input\n */\nexport type InputVariant = 'default' | 'filled' | 'flushed';\n\n/**\n * @slot prefix-icon - Icon or content displayed before the input\n * @slot suffix-icon - Icon or content displayed after the input\n */\n@Component({\n  tag: 'nat-input',\n  styleUrl: 'nat-input.css',\n  shadow: true,\n})\nexport class NatInput {\n  private inputElement?: HTMLInputElement;\n\n  /**\n   * The HTML input type\n   * @default 'text'\n   */\n  @Prop() type: InputType = 'text';\n\n  /**\n   * The size of the input\n   * @default 'md'\n   */\n  @Prop() size: InputSize = 'md';\n\n  /**\n   * The visual style variant\n   * @default 'default'\n   */\n  @Prop() variant: InputVariant = 'default';\n\n  /**\n   * The value of the input\n   * @default ''\n   */\n  @Prop({ mutable: true }) value: string = '';\n\n  /**\n   * Placeholder text when input is empty\n   * @default ''\n   */\n  @Prop() placeholder: string = '';\n\n  /**\n   * Label text displayed above the input\n   * @default ''\n   */\n  @Prop() label: string = '';\n\n  /**\n   * Helper text displayed below the input\n   * @default ''\n   */\n  @Prop() helperText: string = '';\n\n  /**\n   * Error message displayed below the input (replaces helper text)\n   * @default ''\n   */\n  @Prop() error: string = '';\n\n  /**\n   * If true, the input is disabled\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, the input is readonly\n   * @default false\n   */\n  @Prop() readonly: boolean = false;\n\n  /**\n   * If true, the input is required\n   * @default false\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * If true, shows a clear button when input has value\n   * @default false\n   */\n  @Prop() clearable: boolean = false;\n\n  /**\n   * If true, the input takes full width of its container\n   * @default false\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   * Maximum length of input value\n   */\n  @Prop() maxLength?: number;\n\n  /**\n   * Minimum length of input value\n   */\n  @Prop() minLength?: number;\n\n  /**\n   * Pattern for input validation (regex)\n   */\n  @Prop() pattern?: string;\n\n  /**\n   * Step value for number inputs\n   */\n  @Prop() step?: string;\n\n  /**\n   * Autocomplete attribute value\n   * @default 'off'\n   */\n  @Prop() autocomplete: string = 'off';\n\n  /**\n   * Name attribute for the input\n   * @default ''\n   */\n  @Prop() name: string = '';\n\n  /**\n   * ID attribute for the input element\n   * @default ''\n   */\n  @Prop() inputId: string = '';\n\n  /**\n   * Aria label for accessibility\n   */\n  @Prop() ariaLabel?: string;\n\n  /**\n   * Internal focus state\n   */\n  @State() isFocused: boolean = false;\n\n  /**\n   * Emitted when the input value changes (on blur or Enter key)\n   */\n  @Event() natChange: EventEmitter<string>;\n\n  /**\n   * Emitted on every input event (real-time)\n   */\n  @Event() natInput: EventEmitter<string>;\n\n  /**\n   * Emitted when input receives focus\n   */\n  @Event() natFocus: EventEmitter<void>;\n\n  /**\n   * Emitted when input loses focus\n   */\n  @Event() natBlur: EventEmitter<void>;\n\n  /**\n   * Emitted when clear button is clicked\n   */\n  @Event() natClear: EventEmitter<void>;\n\n  @Watch('value')\n  valueChanged(newValue: string) {\n    if (this.inputElement && this.inputElement.value !== newValue) {\n      this.inputElement.value = newValue;\n    }\n  }\n\n  private handleInput = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    this.value = target.value;\n    this.natInput.emit(this.value);\n  };\n\n  private handleChange = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    this.value = target.value;\n    this.natChange.emit(this.value);\n  };\n\n  private handleFocus = () => {\n    this.isFocused = true;\n    this.natFocus.emit();\n  };\n\n  private handleBlur = () => {\n    this.isFocused = false;\n    this.natBlur.emit();\n  };\n\n  private handleClear = () => {\n    this.value = '';\n    this.natClear.emit();\n    this.natChange.emit('');\n    if (this.inputElement) {\n      this.inputElement.focus();\n    }\n  };\n\n  /**\n   * Sets focus on the input element\n   */\n  @Method()\n  async setFocus() {\n    this.inputElement?.focus();\n  }\n\n  /**\n   * Removes focus from the input element\n   */\n  @Method()\n  async removeFocus() {\n    this.inputElement?.blur();\n  }\n\n  /**\n   * Selects all text in the input\n   */\n  @Method()\n  async select() {\n    this.inputElement?.select();\n  }\n\n  render() {\n    const hasError = !!this.error;\n    const showClear = this.clearable && this.value && !this.disabled && !this.readonly;\n\n    const containerClasses = {\n      'nat-input-container': true,\n      'nat-input-container--full-width': this.fullWidth,\n    };\n\n    const wrapperClasses = {\n      'nat-input-wrapper': true,\n      [`nat-input-wrapper--${this.size}`]: true,\n      [`nat-input-wrapper--${this.variant}`]: true,\n      'nat-input-wrapper--focused': this.isFocused,\n      'nat-input-wrapper--error': hasError,\n      'nat-input-wrapper--disabled': this.disabled,\n    };\n\n    return (\n      <Host>\n        <div class={containerClasses}>\n          {this.label && (\n            <label class=\"nat-input-label\" htmlFor={this.inputId || undefined}>\n              {this.label}\n              {this.required && <span class=\"nat-input-required\">*</span>}\n            </label>\n          )}\n\n          <div class={wrapperClasses}>\n            <slot name=\"prefix-icon\" />\n\n            <input\n              ref={el => (this.inputElement = el)}\n              type={this.type}\n              class=\"nat-input\"\n              placeholder={this.placeholder}\n              disabled={this.disabled}\n              readonly={this.readonly}\n              required={this.required}\n              maxLength={this.maxLength}\n              minLength={this.minLength}\n              pattern={this.pattern}\n              step={this.step}\n              autocomplete={this.autocomplete}\n              name={this.name}\n              id={this.inputId || undefined}\n              aria-label={this.ariaLabel || this.label || undefined}\n              aria-invalid={hasError ? 'true' : 'false'}\n              aria-required={this.required ? 'true' : 'false'}\n              aria-disabled={this.disabled ? 'true' : 'false'}\n              value={this.value}\n              onInput={this.handleInput}\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n            />\n\n            {showClear && (\n              <button type=\"button\" class=\"nat-input-clear\" onClick={this.handleClear} tabIndex={-1} aria-label=\"Clear input\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                  <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n                  <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n                </svg>\n              </button>\n            )}\n\n            <slot name=\"suffix-icon\" />\n          </div>\n\n          {(this.helperText || hasError) && <div class={`nat-input-message ${hasError ? 'nat-input-message--error' : ''}`}>{hasError ? this.error : this.helperText}</div>}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n  line-height: 0;\n}\n\n.nat-logo {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n","import { Component, Prop, Host, h } from '@stencil/core';\n\n/**\n * NAT-UI logo with liquid glass effect\n */\n@Component({\n  tag: 'nat-logo',\n  styleUrl: 'nat-logo.css',\n  shadow: true,\n})\nexport class NatLogo {\n  /**\n   * Size of the logo in pixels\n   */\n  @Prop() size: number = 200;\n\n  /**\n   * Enable/disable pulse animation\n   */\n  @Prop() animated: boolean = true;\n\n  /**\n   * Blur intensity for glass effect\n   */\n  @Prop() blurIntensity: number = 1.2;\n\n  render() {\n    const filterId = `glassBlur-${Math.random().toString(36).substr(2, 9)}`;\n    const gradientId = `glassGradient-${Math.random().toString(36).substr(2, 9)}`;\n    const borderGlowId = `borderGlow-${Math.random().toString(36).substr(2, 9)}`;\n    const innerGlowId = `innerGlow-${Math.random().toString(36).substr(2, 9)}`;\n\n    return (\n      <Host>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" width={this.size} height={this.size} class=\"nat-logo\">\n          <defs>\n            <filter id={filterId} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation={this.blurIntensity} />\n              <feComponentTransfer>\n                <feFuncA type=\"linear\" slope=\"0.8\" />\n              </feComponentTransfer>\n            </filter>\n\n            <linearGradient id={gradientId} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stop-color=\"rgba(255,255,255,0.4)\" stop-opacity=\"1\" />\n              <stop offset=\"50%\" stop-color=\"rgba(255,255,255,0.2)\" stop-opacity=\"1\" />\n              <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0.1)\" stop-opacity=\"1\" />\n            </linearGradient>\n\n            <linearGradient id={borderGlowId} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stop-color=\"rgba(255,255,255,0.6)\" stop-opacity=\"1\" />\n              <stop offset=\"100%\" stop-color=\"rgba(255,255,255,0.2)\" stop-opacity=\"1\" />\n            </linearGradient>\n\n            <filter id={innerGlowId}>\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\" result=\"blur\" />\n              <feOffset in=\"blur\" dx=\"1\" dy=\"1\" result=\"offsetBlur\" />\n              <feFlood flood-color=\"rgba(255,255,255,0.5)\" result=\"color\" />\n              <feComposite in=\"color\" in2=\"offsetBlur\" operator=\"in\" result=\"shadow\" />\n              <feComposite in=\"SourceGraphic\" in2=\"shadow\" operator=\"over\" />\n            </filter>\n          </defs>\n\n          <circle cx=\"100\" cy=\"100\" r=\"80\" fill={`url(#${gradientId})`} filter={`url(#${filterId})`} opacity=\"0.6\">\n            {this.animated && <animate attributeName=\"r\" values=\"80;85;80\" dur=\"3s\" repeatCount=\"indefinite\" />}\n          </circle>\n\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"120\"\n            height=\"120\"\n            rx=\"24\"\n            fill={`url(#${gradientId})`}\n            stroke={`url(#${borderGlowId})`}\n            stroke-width=\"2\"\n            filter={`url(#${innerGlowId})`}\n            opacity=\"0.9\"\n          />\n\n          <text\n            x=\"100\"\n            y=\"92\"\n            font-family=\"-apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\"\n            font-size=\"45\"\n            font-weight=\"700\"\n            fill=\"rgba(255,255,255,0.95)\"\n            text-anchor=\"middle\"\n            filter={`url(#${filterId})`}\n          >\n            NAT\n          </text>\n\n          <text\n            x=\"100\"\n            y=\"148\"\n            font-family=\"-apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\"\n            font-size=\"45\"\n            font-weight=\"600\"\n            fill=\"rgba(255,255,255,0.85)\"\n            text-anchor=\"middle\"\n          >\n            UI\n          </text>\n\n          <rect x=\"48\" y=\"48\" width=\"104\" height=\"56\" rx=\"20\" fill=\"rgba(255,255,255,0.3)\" opacity=\"0.4\" />\n        </svg>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  font-family: var(--nat-font-sans);\n}\n\n/* ============================================\n * CONTAINER\n * ============================================ */\n.nat-select-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--nat-space-2);\n  width: 240px;\n}\n\n.nat-select-full-width {\n  width: 100%;\n}\n\n/* ============================================\n * LABEL\n * ============================================ */\n.nat-select-label {\n  font-size: var(--nat-text-sm);\n  font-weight: var(--nat-font-medium);\n  color: var(--nat-text-primary);\n}\n\n.nat-select-required {\n  color: var(--nat-error);\n  margin-left: var(--nat-space-1);\n}\n\n/* ============================================\n * SELECT BOX\n * ============================================ */\n.nat-select {\n  position: relative;\n  background: var(--nat-bg-elevated);\n  border: 1px solid var(--nat-border-base);\n  border-radius: var(--nat-radius-lg);\n  font-size: var(--nat-text-base);\n  color: var(--nat-text-primary);\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: border-color var(--nat-transition-base), box-shadow var(--nat-transition-base);\n}\n\n.nat-select:hover:not(.nat-select--disabled) {\n  border-color: var(--nat-border-hover);\n}\n\n.nat-select:focus-visible {\n  outline: 2px solid var(--nat-focus-ring);\n  outline-offset: 2px;\n}\n\n.nat-select--open {\n  border-color: var(--nat-focus-ring);\n  box-shadow: 0 0 0 3px rgba(91, 111, 232, 0.1);\n}\n\n.nat-select--error {\n  border-color: var(--nat-error);\n}\n\n.nat-select--error.nat-select--open {\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n}\n\n.nat-select--disabled {\n  opacity: var(--nat-opacity-50);\n  cursor: not-allowed;\n  background: var(--nat-bg-subtle);\n}\n\n/* ============================================\n * SIZES\n * ============================================ */\n.nat-select--sm {\n  height: var(--nat-size-sm);\n  padding: 0 var(--nat-space-2);\n  font-size: var(--nat-text-sm);\n}\n\n.nat-select--md {\n  height: var(--nat-size-md);\n  padding: 0 var(--nat-space-3);\n  font-size: var(--nat-text-base);\n}\n\n.nat-select--lg {\n  height: var(--nat-size-lg);\n  padding: 0 var(--nat-space-4);\n  font-size: var(--nat-text-lg);\n}\n\n/* ============================================\n * VALUE\n * ============================================ */\n.nat-select-value {\n  flex: 1 1 auto;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.nat-select-placeholder {\n  color: var(--nat-text-placeholder);\n}\n\n/* ============================================\n * ARROW\n * ============================================ */\n.nat-select-arrow {\n  flex-shrink: 0;\n  color: var(--nat-text-secondary);\n  margin-left: var(--nat-space-2);\n  user-select: none;\n  display: flex;\n  align-items: center;\n  transition: transform var(--nat-transition-base);\n}\n\n.nat-select-arrow--open {\n  transform: rotate(180deg);\n}\n\n.nat-select-arrow svg {\n  display: block;\n}\n\n/* ============================================\n * OPTIONS LIST (POPUP)\n * ============================================ */\n.nat-select-options {\n  position: fixed;\n  background: var(--nat-bg-elevated);\n  border: 1px solid var(--nat-border-base);\n  border-radius: var(--nat-radius-lg);\n  overflow-y: auto;\n  overflow-x: hidden;\n  box-shadow: var(--nat-shadow-xl);\n  z-index: var(--nat-z-dropdown);\n  padding: var(--nat-space-1) 0;\n  margin: 0;\n  list-style: none;\n  font-size: var(--nat-text-base);\n}\n\n/* ============================================\n * OPTION ITEMS\n * ============================================ */\n.nat-select-option {\n  padding: var(--nat-space-2) var(--nat-space-3);\n  cursor: pointer;\n  color: var(--nat-text-primary);\n  user-select: none;\n  transition: background-color var(--nat-transition-fast);\n}\n\n.nat-select-option--selected {\n  background: var(--nat-primary);\n  color: var(--nat-white);\n  font-weight: var(--nat-font-semibold);\n}\n\n.nat-select-option--focused:not(.nat-select-option--disabled) {\n  background: var(--nat-primary-lighter);\n}\n\n.nat-select-option--selected.nat-select-option--focused {\n  background: var(--nat-primary-hover);\n}\n\n.nat-select-option:hover:not(.nat-select-option--disabled):not(.nat-select-option--selected) {\n  background: var(--nat-bg-subtle);\n}\n\n.nat-select-option--selected:hover {\n  background: var(--nat-primary-hover);\n}\n\n.nat-select-option--disabled {\n  color: var(--nat-text-disabled);\n  cursor: not-allowed;\n  opacity: var(--nat-opacity-50);\n}\n\n.nat-select-option--empty {\n  padding: var(--nat-space-3);\n  color: var(--nat-text-tertiary);\n  text-align: center;\n  font-style: italic;\n  cursor: default;\n}\n\n/* ============================================\n * MESSAGE\n * ============================================ */\n.nat-select-message {\n  font-size: var(--nat-text-xs);\n  color: var(--nat-text-secondary);\n  padding-left: var(--nat-space-1);\n  min-height: 1.25rem;\n}\n\n.nat-select-message--error {\n  color: var(--nat-error);\n}\n","import { Component, Host, h, Prop, State, Event, EventEmitter, Element, Watch, Method, Listen } from '@stencil/core';\n\n/**\n * Size variants for the select\n */\nexport type SelectSize = 'sm' | 'md' | 'lg';\n\n/**\n * Option type for select items\n */\nexport interface SelectOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\n@Component({\n  tag: 'nat-select',\n  styleUrl: 'nat-select.css',\n  shadow: true,\n})\nexport class NatSelect {\n  @Element() el!: HTMLElement;\n\n  private selectDiv?: HTMLElement;\n  private optionsList?: HTMLElement;\n\n  /**\n   * Array of option objects with value, label, and optional disabled flag\n   * Must be set via JavaScript property, not HTML attribute\n   * @default []\n   */\n  @Prop() options: SelectOption[] = [];\n\n  /**\n   * The currently selected value\n   * @default ''\n   */\n  @Prop({ mutable: true }) value: string = '';\n\n  /**\n   * Label text displayed above the select\n   * @default ''\n   */\n  @Prop() label: string = '';\n\n  /**\n   * If true, the select is disabled\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Error message displayed below the select\n   * @default ''\n   */\n  @Prop() error: string = '';\n\n  /**\n   * Placeholder text when no value is selected\n   * @default 'Select an option'\n   */\n  @Prop() placeholder: string = 'Select an option';\n\n  /**\n   * If true, the select takes full width of its container\n   * @default false\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   * Size variant of the select\n   * @default 'md'\n   */\n  @Prop() size: SelectSize = 'md';\n\n  /**\n   * Helper text displayed below the select\n   * @default ''\n   */\n  @Prop() helperText: string = '';\n\n  /**\n   * If true, the select is required\n   * @default false\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * Name attribute for form submission\n   * @default ''\n   */\n  @Prop() name: string = '';\n\n  /**\n   * Internal state for dropdown visibility\n   */\n  @State() isOpen: boolean = false;\n\n  /**\n   * Internal state for popup positioning styles\n   */\n  @State() popoverStyles: { top?: string; left?: string; maxHeight?: string; width?: string } = {};\n\n  /**\n   * Internal state for focused option index (keyboard navigation)\n   */\n  @State() focusedIndex: number = -1;\n\n  /**\n   * Emitted when the selected value changes\n   */\n  @Event() natChange: EventEmitter<string>;\n\n  /**\n   * Emitted when the dropdown opens\n   */\n  @Event() natOpen: EventEmitter<void>;\n\n  /**\n   * Emitted when the dropdown closes\n   */\n  @Event() natClose: EventEmitter<void>;\n\n  /**\n   * Watch for external value changes\n   */\n  @Watch('value')\n  valueChanged(_newValue: string) {\n    this.isOpen = false;\n  }\n\n  componentDidLoad() {\n    window.addEventListener('resize', this.handleWindowResize);\n    window.addEventListener('scroll', this.handleWindowScroll, true);\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('resize', this.handleWindowResize);\n    window.removeEventListener('scroll', this.handleWindowScroll, true);\n  }\n\n  private handleWindowResize = () => {\n    if (this.isOpen) {\n      this.updatePopoverPosition();\n    }\n  };\n\n  private handleWindowScroll = () => {\n    if (this.isOpen) {\n      this.updatePopoverPosition();\n    }\n  };\n\n  private updatePopoverPosition = () => {\n    if (!this.selectDiv || !this.optionsList) {\n      return;\n    }\n\n    const viewportPadding = 16;\n    const gap = 8;\n\n    const rect = this.selectDiv.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    const popupHeight = this.optionsList.scrollHeight;\n    const popupWidth = rect.width;\n\n    const spaceBelow = viewportHeight - rect.bottom - viewportPadding;\n    const spaceAbove = rect.top - viewportPadding;\n\n    let top: number;\n    let left = rect.left;\n    let maxHeight: number;\n\n    if (popupHeight > spaceBelow && spaceAbove > spaceBelow) {\n      top = rect.top - popupHeight - gap;\n      maxHeight = Math.min(popupHeight, spaceAbove - gap);\n    } else {\n      top = rect.bottom + gap;\n      maxHeight = Math.min(popupHeight, spaceBelow - gap);\n    }\n\n    if (left + popupWidth + viewportPadding > viewportWidth) {\n      left = viewportWidth - popupWidth - viewportPadding;\n    }\n\n    if (left < viewportPadding) {\n      left = viewportPadding;\n    }\n\n    this.popoverStyles = {\n      top: `${top}px`,\n      left: `${left}px`,\n      width: `${popupWidth}px`,\n      maxHeight: `${maxHeight}px`,\n    };\n  };\n\n  private toggleOpen = () => {\n    if (this.disabled) return;\n\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  /**\n   * Opens the dropdown\n   */\n  @Method()\n  async open() {\n    if (this.disabled || this.isOpen) return;\n\n    this.isOpen = true;\n    this.natOpen.emit();\n\n    // Reset focused index to current selection\n    const selectedIndex = this.options.findIndex(opt => opt.value === this.value);\n    this.focusedIndex = selectedIndex >= 0 ? selectedIndex : 0;\n\n    requestAnimationFrame(() => {\n      this.updatePopoverPosition();\n      // Scroll to selected option\n      if (this.optionsList && selectedIndex >= 0) {\n        const selectedOption = this.optionsList.children[selectedIndex] as HTMLElement;\n        selectedOption?.scrollIntoView({ block: 'nearest' });\n      }\n    });\n  }\n\n  /**\n   * Closes the dropdown\n   */\n  @Method()\n  async close() {\n    if (!this.isOpen) return;\n\n    this.isOpen = false;\n    this.focusedIndex = -1;\n    this.natClose.emit();\n  }\n\n  private selectOption = (optionValue: string) => {\n    if (this.disabled) return;\n    this.value = optionValue;\n    this.natChange.emit(this.value);\n    this.close();\n  };\n\n  private getSelectedLabel() {\n    const selected = this.options.find(opt => opt.value === this.value);\n    return selected ? selected.label : '';\n  }\n\n  private handleBlur = (event: FocusEvent) => {\n    const related = event.relatedTarget as HTMLElement | null;\n    if (!this.el.contains(related)) {\n      this.close();\n    }\n  };\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return;\n\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        if (this.isOpen && this.focusedIndex >= 0) {\n          const option = this.options[this.focusedIndex];\n          if (!option.disabled) {\n            this.selectOption(option.value);\n          }\n        } else {\n          this.open();\n        }\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        this.close();\n        break;\n\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!this.isOpen) {\n          this.open();\n        } else {\n          this.focusNextOption();\n        }\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        if (!this.isOpen) {\n          this.open();\n        } else {\n          this.focusPreviousOption();\n        }\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        if (this.isOpen) {\n          this.focusedIndex = 0;\n        }\n        break;\n\n      case 'End':\n        event.preventDefault();\n        if (this.isOpen) {\n          this.focusedIndex = this.options.length - 1;\n        }\n        break;\n    }\n  }\n\n  private focusNextOption() {\n    let nextIndex = this.focusedIndex + 1;\n\n    // Skip disabled options\n    while (nextIndex < this.options.length && this.options[nextIndex].disabled) {\n      nextIndex++;\n    }\n\n    if (nextIndex < this.options.length) {\n      this.focusedIndex = nextIndex;\n      this.scrollToFocusedOption();\n    }\n  }\n\n  private focusPreviousOption() {\n    let prevIndex = this.focusedIndex - 1;\n\n    // Skip disabled options\n    while (prevIndex >= 0 && this.options[prevIndex].disabled) {\n      prevIndex--;\n    }\n\n    if (prevIndex >= 0) {\n      this.focusedIndex = prevIndex;\n      this.scrollToFocusedOption();\n    }\n  }\n\n  private scrollToFocusedOption() {\n    if (this.optionsList && this.focusedIndex >= 0) {\n      const focusedOption = this.optionsList.children[this.focusedIndex] as HTMLElement;\n      focusedOption?.scrollIntoView({ block: 'nearest' });\n    }\n  }\n\n  render() {\n    const hasError = !!this.error;\n\n    const containerClasses = {\n      'nat-select-container': true,\n      'nat-select-full-width': this.fullWidth,\n    };\n\n    const selectClasses = {\n      'nat-select': true,\n      [`nat-select--${this.size}`]: true,\n      'nat-select--open': this.isOpen,\n      'nat-select--disabled': this.disabled,\n      'nat-select--error': hasError,\n    };\n\n    return (\n      <Host onBlur={this.handleBlur} tabIndex={-1} aria-disabled={this.disabled ? 'true' : 'false'}>\n        <div class={containerClasses}>\n          {this.label && (\n            <label class=\"nat-select-label\">\n              {this.label}\n              {this.required && <span class=\"nat-select-required\">*</span>}\n            </label>\n          )}\n\n          <div\n            ref={el => (this.selectDiv = el)}\n            class={selectClasses}\n            role=\"combobox\"\n            aria-haspopup=\"listbox\"\n            aria-expanded={this.isOpen ? 'true' : 'false'}\n            aria-controls=\"nat-select-listbox\"\n            aria-labelledby={this.label ? 'nat-select-label' : undefined}\n            aria-invalid={hasError ? 'true' : 'false'}\n            aria-required={this.required ? 'true' : 'false'}\n            onClick={this.toggleOpen}\n            tabIndex={this.disabled ? -1 : 0}\n          >\n            <div class=\"nat-select-value\">{this.value ? this.getSelectedLabel() : <span class=\"nat-select-placeholder\">{this.placeholder}</span>}</div>\n\n            <div class={{ 'nat-select-arrow': true, 'nat-select-arrow--open': this.isOpen }}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" />\n              </svg>\n            </div>\n          </div>\n\n          {this.isOpen && (\n            <ul\n              ref={el => (this.optionsList = el)}\n              id=\"nat-select-listbox\"\n              class=\"nat-select-options\"\n              role=\"listbox\"\n              style={this.popoverStyles}\n              aria-labelledby={this.label ? 'nat-select-label' : undefined}\n            >\n              {this.options.length === 0 && <li class=\"nat-select-option nat-select-option--empty\">No options available</li>}\n              {this.options.map((opt, index) => (\n                <li\n                  key={opt.value}\n                  id={`option-${opt.value}`}\n                  role=\"option\"\n                  aria-selected={this.value === opt.value ? 'true' : 'false'}\n                  aria-disabled={opt.disabled ? 'true' : 'false'}\n                  class={{\n                    'nat-select-option': true,\n                    'nat-select-option--selected': this.value === opt.value,\n                    'nat-select-option--focused': index === this.focusedIndex,\n                    'nat-select-option--disabled': opt.disabled,\n                  }}\n                  onClick={() => !opt.disabled && this.selectOption(opt.value)}\n                >\n                  {opt.label}\n                </li>\n              ))}\n            </ul>\n          )}\n\n          {(this.helperText || hasError) && <div class={{ 'nat-select-message': true, 'nat-select-message--error': hasError }}>{hasError ? this.error : this.helperText}</div>}\n\n          {/* Hidden input for form submission */}\n          {this.name && <input type=\"hidden\" name={this.name} value={this.value} />}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n}\n\n.spinner {\n  display: inline-block;\n}\n\n.spinner--sm {\n  width: 16px;\n  height: 16px;\n}\n\n.spinner--md {\n  width: 24px;\n  height: 24px;\n}\n\n.spinner--lg {\n  width: 32px;\n  height: 32px;\n}\n\n.spinner__circle {\n  width: 100%;\n  height: 100%;\n  border: var(--nat-border-width-thick) solid var(--nat-border-base);\n  border-top-color: var(--nat-primary);\n  border-radius: var(--nat-radius-full);\n  animation: spin 0.6s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Prop, Host, h } from '@stencil/core';\n\nexport type SpinnerSize = 'sm' | 'md' | 'lg';\n\n@Component({\n  tag: 'nat-spinner',\n  styleUrl: 'nat-spinner.css',\n  shadow: true,\n})\nexport class NatSpinner {\n  /**\n   * Size of the spinner\n   */\n  @Prop() size: SpinnerSize = 'md';\n\n  /**\n   * Accessible label for screen readers\n   */\n  @Prop() label: string = 'Loading...';\n\n  render() {\n    return (\n      <Host role=\"status\" aria-label={this.label}>\n        <div class={`spinner spinner--${this.size}`}>\n          <div class=\"spinner__circle\"></div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n/* ============================================\n * CONTAINER\n * ============================================ */\n.nat-textarea-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--nat-space-2);\n}\n\n.nat-textarea-container--full-width {\n  width: 100%;\n}\n\n/* ============================================\n * LABEL\n * ============================================ */\n.nat-textarea-label {\n  font-size: var(--nat-text-sm);\n  font-weight: var(--nat-font-medium);\n  color: var(--nat-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--nat-space-1);\n}\n\n.nat-textarea-required {\n  color: var(--nat-error);\n}\n\n/* ============================================\n * WRAPPER\n * ============================================ */\n.nat-textarea-wrapper {\n  position: relative;\n  border: var(--nat-border-width-base) solid var(--nat-border-base);\n  border-radius: var(--nat-radius-lg);\n  background: var(--nat-bg-elevated);\n  transition: border-color var(--nat-transition-base), box-shadow var(--nat-transition-base);\n  display: flex;\n}\n\n.nat-textarea-wrapper:hover:not(.nat-textarea-wrapper--disabled) {\n  border-color: var(--nat-border-hover);\n}\n\n.nat-textarea-wrapper--focused {\n  border-color: var(--nat-focus-ring);\n  box-shadow: 0 0 0 3px rgba(91, 111, 232, 0.1);\n}\n\n.nat-textarea-wrapper--error {\n  border-color: var(--nat-error);\n}\n\n.nat-textarea-wrapper--error.nat-textarea-wrapper--focused {\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n}\n\n.nat-textarea-wrapper--disabled {\n  opacity: var(--nat-opacity-50);\n  cursor: not-allowed;\n  background: var(--nat-bg-subtle);\n}\n\n/* ============================================\n * TEXTAREA ELEMENT\n * ============================================ */\n.nat-textarea {\n  flex: 1;\n  min-width: 0;\n  border: none;\n  background: transparent;\n  font-family: var(--nat-font-sans);\n  font-size: var(--nat-text-base);\n  color: var(--nat-text-primary);\n  padding: var(--nat-space-3);\n  outline: none;\n  line-height: var(--nat-leading-normal);\n}\n\n.nat-textarea::placeholder {\n  color: var(--nat-text-placeholder);\n}\n\n.nat-textarea:disabled {\n  cursor: not-allowed;\n}\n\n/* Resize variants */\n.nat-textarea--resize-none {\n  resize: none;\n}\n\n.nat-textarea--resize-vertical {\n  resize: vertical;\n}\n\n.nat-textarea--resize-horizontal {\n  resize: horizontal;\n}\n\n.nat-textarea--resize-both {\n  resize: both;\n}\n\n.nat-textarea--auto-resize {\n  resize: none;\n  overflow-y: hidden;\n}\n\n/* ============================================\n * CLEAR BUTTON\n * ============================================ */\n.nat-textarea-clear {\n  position: absolute;\n  top: var(--nat-space-3);\n  right: var(--nat-space-3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  border: none;\n  background: transparent;\n  color: var(--nat-text-tertiary);\n  cursor: pointer;\n  border-radius: var(--nat-radius-sm);\n  transition: color var(--nat-transition-fast), background-color var(--nat-transition-fast);\n  flex-shrink: 0;\n  z-index: 1;\n}\n\n.nat-textarea-clear:hover {\n  color: var(--nat-text-primary);\n  background: var(--nat-bg-subtle);\n}\n\n.nat-textarea-clear:focus-visible {\n  outline: 2px solid var(--nat-focus-ring);\n  outline-offset: 2px;\n}\n\n.nat-textarea-clear svg {\n  width: 16px;\n  height: 16px;\n}\n\n/* ============================================\n * FOOTER (MESSAGE + COUNTER)\n * ============================================ */\n.nat-textarea-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--nat-space-2);\n  min-height: 1.25rem;\n}\n\n.nat-textarea-message {\n  flex: 1;\n  font-size: var(--nat-text-xs);\n  color: var(--nat-text-secondary);\n  padding-left: var(--nat-space-1);\n}\n\n.nat-textarea-message--error {\n  color: var(--nat-error);\n}\n\n.nat-textarea-counter {\n  font-size: var(--nat-text-xs);\n  color: var(--nat-text-tertiary);\n  white-space: nowrap;\n  padding-right: var(--nat-space-1);\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch, Method } from '@stencil/core';\n\n/**\n * @slot - Textarea content\n */\n@Component({\n  tag: 'nat-textarea',\n  styleUrl: 'nat-textarea.css',\n  shadow: true,\n})\nexport class NatTextarea {\n  private textareaElement?: HTMLTextAreaElement;\n\n  /**\n   * The value of the textarea\n   * @default ''\n   */\n  @Prop({ mutable: true }) value: string = '';\n\n  /**\n   * Placeholder text when textarea is empty\n   * @default ''\n   */\n  @Prop() placeholder: string = '';\n\n  /**\n   * Label text displayed above the textarea\n   * @default ''\n   */\n  @Prop() label: string = '';\n\n  /**\n   * Helper text displayed below the textarea\n   * @default ''\n   */\n  @Prop() helperText: string = '';\n\n  /**\n   * Error message displayed below the textarea (replaces helper text)\n   * @default ''\n   */\n  @Prop() error: string = '';\n\n  /**\n   * If true, the textarea is disabled\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, the textarea is readonly\n   * @default false\n   */\n  @Prop() readonly: boolean = false;\n\n  /**\n   * If true, the textarea is required\n   * @default false\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * Number of visible text lines (height)\n   * @default 3\n   */\n  @Prop() rows: number = 3;\n\n  /**\n   * Maximum number of characters allowed\n   */\n  @Prop() maxLength?: number;\n\n  /**\n   * Minimum number of characters required\n   */\n  @Prop() minLength?: number;\n\n  /**\n   * If true, shows a clear button when textarea has value\n   * @default false\n   */\n  @Prop() clearable: boolean = false;\n\n  /**\n   * If true, the textarea takes full width of its container\n   * @default false\n   */\n  @Prop() fullWidth: boolean = false;\n\n  /**\n   * Name attribute for form submission\n   * @default ''\n   */\n  @Prop() name: string = '';\n\n  /**\n   * ID attribute for the textarea element\n   * @default ''\n   */\n  @Prop() textareaId: string = '';\n\n  /**\n   * Aria label for accessibility\n   */\n  @Prop() ariaLabel?: string;\n\n  /**\n   * If true, shows character counter when maxLength is set\n   * @default false\n   */\n  @Prop() showCounter: boolean = false;\n\n  /**\n   * If true, textarea auto-resizes to fit content\n   * @default false\n   */\n  @Prop() autoResize: boolean = false;\n\n  /**\n   * Resize behavior: 'none', 'vertical', 'horizontal', 'both'\n   * @default 'vertical'\n   */\n  @Prop() resize: 'none' | 'vertical' | 'horizontal' | 'both' = 'vertical';\n\n  /**\n   * Internal focus state\n   */\n  @State() isFocused: boolean = false;\n\n  /**\n   * Emitted when the textarea value changes (on blur)\n   */\n  @Event() natChange: EventEmitter<string>;\n\n  /**\n   * Emitted on every input event (real-time)\n   */\n  @Event() natInput: EventEmitter<string>;\n\n  /**\n   * Emitted when textarea receives focus\n   */\n  @Event() natFocus: EventEmitter<void>;\n\n  /**\n   * Emitted when textarea loses focus\n   */\n  @Event() natBlur: EventEmitter<void>;\n\n  /**\n   * Emitted when clear button is clicked\n   */\n  @Event() natClear: EventEmitter<void>;\n\n  @Watch('value')\n  valueChanged(newValue: string) {\n    if (this.textareaElement && this.textareaElement.value !== newValue) {\n      this.textareaElement.value = newValue;\n    }\n    \n    if (this.autoResize) {\n      this.adjustHeight();\n    }\n  }\n\n  componentDidLoad() {\n    if (this.autoResize) {\n      this.adjustHeight();\n    }\n  }\n\n  private adjustHeight() {\n    if (!this.textareaElement || !this.autoResize) return;\n    \n    // Reset height to recalculate\n    this.textareaElement.style.height = 'auto';\n    // Set height to scrollHeight\n    this.textareaElement.style.height = this.textareaElement.scrollHeight + 'px';\n  }\n\n  private handleInput = (event: Event) => {\n    const target = event.target as HTMLTextAreaElement;\n    this.value = target.value;\n    this.natInput.emit(this.value);\n    \n    if (this.autoResize) {\n      this.adjustHeight();\n    }\n  };\n\n  private handleChange = (event: Event) => {\n    const target = event.target as HTMLTextAreaElement;\n    this.value = target.value;\n    this.natChange.emit(this.value);\n  };\n\n  private handleFocus = () => {\n    this.isFocused = true;\n    this.natFocus.emit();\n  };\n\n  private handleBlur = () => {\n    this.isFocused = false;\n    this.natBlur.emit();\n  };\n\n  private handleClear = () => {\n    this.value = '';\n    this.natClear.emit();\n    this.natChange.emit('');\n    if (this.textareaElement) {\n      this.textareaElement.focus();\n    }\n    \n    if (this.autoResize) {\n      this.adjustHeight();\n    }\n  };\n\n  /**\n   * Sets focus on the textarea element\n   */\n  @Method()\n  async setFocus() {\n    this.textareaElement?.focus();\n  }\n\n  /**\n   * Removes focus from the textarea element\n   */\n  @Method()\n  async removeFocus() {\n    this.textareaElement?.blur();\n  }\n\n  /**\n   * Selects all text in the textarea\n   */\n  @Method()\n  async select() {\n    this.textareaElement?.select();\n  }\n\n  private getCharacterCount() {\n    return this.value.length;\n  }\n\n  render() {\n    const hasError = !!this.error;\n    const showClear = this.clearable && this.value && !this.disabled && !this.readonly;\n    const showCount = this.showCounter && this.maxLength;\n\n    const containerClasses = {\n      'nat-textarea-container': true,\n      'nat-textarea-container--full-width': this.fullWidth,\n    };\n\n    const wrapperClasses = {\n      'nat-textarea-wrapper': true,\n      'nat-textarea-wrapper--focused': this.isFocused,\n      'nat-textarea-wrapper--error': hasError,\n      'nat-textarea-wrapper--disabled': this.disabled,\n    };\n\n    return (\n      <Host>\n        <div class={containerClasses}>\n          {this.label && (\n            <label class=\"nat-textarea-label\" htmlFor={this.textareaId || undefined}>\n              {this.label}\n              {this.required && <span class=\"nat-textarea-required\">*</span>}\n            </label>\n          )}\n\n          <div class={wrapperClasses}>\n            <textarea\n              ref={el => (this.textareaElement = el)}\n              class={{\n                'nat-textarea': true,\n                [`nat-textarea--resize-${this.resize}`]: true,\n                'nat-textarea--auto-resize': this.autoResize,\n              }}\n              rows={this.rows}\n              value={this.value}\n              placeholder={this.placeholder}\n              disabled={this.disabled}\n              readonly={this.readonly}\n              required={this.required}\n              maxLength={this.maxLength}\n              minLength={this.minLength}\n              name={this.name}\n              id={this.textareaId || undefined}\n              aria-label={this.ariaLabel || this.label || undefined}\n              aria-invalid={hasError ? 'true' : 'false'}\n              aria-required={this.required ? 'true' : 'false'}\n              aria-disabled={this.disabled ? 'true' : 'false'}\n              onInput={this.handleInput}\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n            />\n\n            {showClear && (\n              <button\n                type=\"button\"\n                class=\"nat-textarea-clear\"\n                onClick={this.handleClear}\n                tabIndex={-1}\n                aria-label=\"Clear text\"\n              >\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                  <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n                  <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n                </svg>\n              </button>\n            )}\n          </div>\n\n          <div class=\"nat-textarea-footer\">\n            {(this.helperText || hasError) && (\n              <div class={`nat-textarea-message ${hasError ? 'nat-textarea-message--error' : ''}`}>\n                {hasError ? this.error : this.helperText}\n              </div>\n            )}\n\n            {showCount && (\n              <div class=\"nat-textarea-counter\">\n                {this.getCharacterCount()} / {this.maxLength}\n              </div>\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":"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"}